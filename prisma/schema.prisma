generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  phone        String   @unique
  firstName    String
  lastName     String
  email        String   @unique
  walletAmount Float    @default(0)
  groupIds     String[] @db.ObjectId
  groups       Group[]  @relation(fields: [groupIds], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model Group {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  createdByUserId   String        @db.ObjectId
  displayPic        String?
  userIds           String[]      @db.ObjectId
  users             User[]        @relation(fields: [userIds], references: [id])
  groupTransactions Transaction[]
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
}

model Transaction {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  lenderUserId     String             @db.ObjectId
  borrowerUserId   String             @db.ObjectId
  lenderUserName   String
  borrowerUserName String
  description      String
  status           ETransactionStatus @default(PENDING)
  categoryId       String?
  subCategoryId    String?
  categoryName     String?
  subCategoryName  String?
  groupId          String?            @default("") @db.ObjectId
  Group            Group?             @relation(fields: [groupId], references: [id])
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
}

model Category {
  id            String               @id @map("_id")
  name          ETransactionCategory
  subcategories SubCategory[]
}

model SubCategory {
  id         String                  @id @map("_id")
  name       ETransactionSubCategory
  Category   Category?               @relation(fields: [categoryId], references: [id])
  categoryId String?
}

enum ETransactionStatus {
  PENDING
  COMPLETED
  DELETED
  CANCELLED
}

enum ETransactionCategory {
  MISCELLANEOUS
  FOOD
  TRAVEL
  TRANSFER
}

enum ETransactionSubCategory {
  GENERAL
}
